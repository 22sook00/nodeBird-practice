{"ast":null,"code":"var _jsxFileName = \"/Users/2sook2/Desktop/\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB \\u1100\\u1161\\u11BC\\u110B\\u1174/\\uD83E\\uDD9Creact-nodeBird/front/pages/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux'; // next.js 에서는 있어도그만 없어도그만임 -> pages 폴더를 인식해서 그 안에 있는 파일들을 코드스플리팅\n// next.js 안의 폴더명은 무조건 pages -> 이 안에 파일만들기\n// 단점 : 새 파일 만들때마다 서버 나갔다가 들어와야한다.\n\nimport AppLayOut from '../components/AppLayOut';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts; //게시글은 로그인한 사람만 쓸수있으니까 조건을 걸어줘.\n  //여기서 index 를 키로쓰면 절대안된다. 특히 게시글이 지워질 가능성이 있는 경우에는 \n  //반복되는것들이 지워직 가능성이 있을경우 절대쓰며안됨. 중간에 추가되거나 삭제 되면 쓰면안되.\n  //단, 반복되지만 바뀌지않는다면 써도된다. \n\n\n  return /*#__PURE__*/_jsxDEV(AppLayOut, {\n    children: [isLoggedIn && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }, _this), mainPosts.map(function (post, idx) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"cgtaJ+tI5i1+JiF8w8B8b42QzXA=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/2sook2/Desktop/인프런 강의/🦜react-nodeBird/front/pages/index.js"],"names":["React","useSelector","AppLayOut","PostForm","PostCard","Home","state","user","isLoggedIn","post","mainPosts","map","idx"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,qBAAqBJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CAAhC;AAAA,MAAOC,UAAP,gBAAOA,UAAP;;AACA,sBAAoBP,WAAW,CAAC,UAACK,KAAD;AAAA,WAASA,KAAK,CAACG,IAAf;AAAA,GAAD,CAA/B;AAAA,MAAOC,SAAP,iBAAOA,SAAP,CAFiB,CAGjB;AAEA;AACA;AACA;;;AACA,sBACE,QAAC,SAAD;AAAA,eACIF,UAAU,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADlB,EAEIE,SAAS,CAACC,GAAV,CAAc,UAACF,IAAD,EAAMG,GAAN,EAAY;AAC1B,0BAAO,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAIH;AAA9B,SAAiBG,GAAjB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFC,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAhBD;;GAAMP,I;UACiBJ,W,EACDA,W;;;KAFhBI,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n// next.js 에서는 있어도그만 없어도그만임 -> pages 폴더를 인식해서 그 안에 있는 파일들을 코드스플리팅\n// next.js 안의 폴더명은 무조건 pages -> 이 안에 파일만들기\n// 단점 : 새 파일 만들때마다 서버 나갔다가 들어와야한다.\nimport AppLayOut from '../components/AppLayOut'\nimport PostForm from '../components/PostForm'\nimport PostCard from '../components/PostCard'\n\nconst Home = () => {\n  const {isLoggedIn} = useSelector((state)=>state.user)\n  const {mainPosts} = useSelector((state)=>state.post)\n  //게시글은 로그인한 사람만 쓸수있으니까 조건을 걸어줘.\n  \n  //여기서 index 를 키로쓰면 절대안된다. 특히 게시글이 지워질 가능성이 있는 경우에는 \n  //반복되는것들이 지워직 가능성이 있을경우 절대쓰며안됨. 중간에 추가되거나 삭제 되면 쓰면안되.\n  //단, 반복되지만 바뀌지않는다면 써도된다. \n  return (\n    <AppLayOut>\n      { isLoggedIn && <PostForm/>}\n      { mainPosts.map((post,idx)=>{\n        return <PostCard key = {idx} post = {post}/>\n      })}\n    </AppLayOut>\n    )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}