{"ast":null,"code":"var _jsxFileName = \"/Users/2sook2/Desktop/\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB \\u1100\\u1161\\u11BC\\u110B\\u1174/\\uD83E\\uDD9Creact-nodeBird/front/components/PostCard.js\";\nimport { useSelector } from 'react-redux';\nimport { Button, Card } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, Popover, EllipsisOutlined } from '@ant-design/icons/RetweetOutlined';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  //optional 체이닝 : ~~?.~~ 아이디가 있으면 me 가들어가고 없으면 언디파인이 들어간다.\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Image[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this) //jsx에서 배열안에는 key를 넣어주어야 한다. ex)map \n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, 'retweet', false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, 'comment', false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, 'more', false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propTypes = {\n  //obj 는 shape 로 더 구체적으로 적어줄 수 있다. \n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes),\n    images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/2sook2/Desktop/인프런 강의/🦜react-nodeBird/front/components/PostCard.js"],"names":["useSelector","Button","Card","Content","RetweetOutlined","HeartOutlined","MessageOutlined","Popover","EllipsisOutlined","PropTypes","React","ButtonGroup","PostCard","post","id","state","user","me","Image","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","images","isRequired"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux'\nimport { Button ,Card } from 'antd'\nimport { Content } from 'antd/lib/layout/layout'\nimport { RetweetOutlined ,HeartOutlined , MessageOutlined , Popover, EllipsisOutlined} from '@ant-design/icons/RetweetOutlined'\nimport PropTypes from 'prop-types';\nimport React from 'react'\nimport ButtonGroup from 'antd/lib/button/button-group'\n\nconst PostCard = ({post}) => {\n  //optional 체이닝 : ~~?.~~ 아이디가 있으면 me 가들어가고 없으면 언디파인이 들어간다.\n  const id = useSelector((state)=>state.user.me ?.id);\n  return (\n    <div>\n      <Card cover = {post.Image[0] \n      && <PostImages images = {post.Images}/>}\n      //jsx에서 배열안에는 key를 넣어주어야 한다. ex)map \n      actions = {[\n        <RetweetOutlined key = 'retweet'/>,\n        <HeartOutlined key = 'heart'/>,\n        <MessageOutlined key = 'comment'/>,\n        <Popover key = 'more' content = {(\n          <ButtonGroup>\n            {/*로그인했고, 내 아이디가 아이디와 같으면 수정삭제가능, 아니면 신고가능 */}\n            {id && post.User.id === id ? (\n              <>\n              <Button>수정</Button>\n              <Button type = 'danger'>삭제</Button>\n              </>\n            ) : <Button>신고</Button>}\n          </ButtonGroup>\n        )}>\n          <EllipsisOutlined />\n        </Popover>\n      ]}\n      >\n        <Card.Meta\n        avatar = {<Avatar>{post.User.nickname[0]}</Avatar>}\n        title = {post.User.nickname}\n        description = {post.content}\n        />\n      </Card>\n      <CommentForm/>\n      <Comments/>\n    </div>\n  )\n}\n\nPostCard.propTypes = {\n  //obj 는 shape 로 더 구체적으로 적어줄 수 있다. \n  post : PropTypes.shape({\n    id : PropTypes.number,\n    User : PropTypes.object,\n    content : PropTypes.string,\n    createdAt : PropTypes.object,\n    Comments : PropTypes.arrayOf(PropTypes),\n    images : PropTypes.arrayOf(PropTypes.object),\n  }).isRequired\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}