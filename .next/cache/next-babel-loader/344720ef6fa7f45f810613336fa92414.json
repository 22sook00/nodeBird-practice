{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//useState 로 썼던 더미데이터를 initialState 에 넣고 대문자로 된 부분은 실제 데이터를 받아서 넣으면 된다.\nexport var initialState = {\n  mainPosts: [{\n    //서버에서의 시퀄라이즈 등 다른정보들과 합칠만한 정보는 대문자로 시작하는게 좋다.\n    //서버쪽에서 데이터 어떻게 보낼지 물어봐 제발좀. 아니면 따로 요청하쇼.\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'sook'\n    },\n    content: '첫번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://blogfiles.pstatic.net/MjAyMDA5MDhfMjY3/MDAxNTk5NTM2OTM1ODMz._bpzejYT7BDuNJzz14Kja1sDuxuKbZ8faxtKvcqy0pAg.NtqaAdWrVzRB_adPPD2YBnqIevdDLRp86Ud3-670SMIg.JPEG.tbdtbd123/%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C%ED%98%B8%EC%88%98_%EC%A7%80%EB%A6%BC.jpg'\n    }, {\n      src: 'https://postfiles.pstatic.net/MjAyMDA4MzBfMjg1/MDAxNTk4NzY5MzMzNDIz.AQF9ykn6dJJ4cQklyBY2W7dMqn48ItinAcBX2Bir-gsg.x3Qwoya92AWdF9LYpXLgfyunPiQWv2BgoWikraSTQ8wg.JPEG.tbdtbd123/%ED%9D%94%ED%95%9C%EC%98%A8%EC%B2%9C%EB%B7%B0.jpg?type=w966'\n    }, {\n      src: 'https://postfiles.pstatic.net/MjAyMDA4MzBfNyAg/MDAxNTk4NzcwMzkwNTQ0.5FZy2dX2Aa7NCHuR7dUuecS2vHZXRSGTsN5PzS2-Uywg.fgW23kHGy87dKvUl7l7kzXIv6cnptrREwFg8a8jbIYcg.JPEG.tbdtbd123/%EC%84%A4%ED%8D%BC%EC%82%B0_%EB%92%B7%EB%AA%A8%EC%8A%B5.jpg?type=w966'\n    }],\n    Comment: [{\n      User: {\n        nickname: 'sook'\n      },\n      content: '돈 많이벌고싶다.'\n    }, {\n      User: {\n        nickname: 'hyeyoung'\n      },\n      content: '여행가고싶다.'\n    }, {\n      User: {\n        nickname: 'kitae'\n      },\n      content: '나도 돈 많이벌고싶다.'\n    }]\n  }],\n  imagePaths: [],\n  //image 업로드 경로들이 저장될것.\n  postAdded: false //게시글 추가가 완료되었을때.\n\n}; //action 객체\n\nvar ADD_POST = 'ADD_POST'; //변수,상수로 따로빼준건 그냥 오타방지.\n\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: 'babo'\n  },\n  Image: [],\n  Comment: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)) //dummyPost 를 앞에 추가해준 이유는 게시글이 앞에서부터 쌓이기때문.\n        //반대가 되면 게시글 제일아래에 추가가 되버린다. \n\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/2sook2/Desktop/인프런 강의/🦜react-nodeBird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comment","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","Image","reducer","state","action"],"mappings":";;;;;;;AAAA;AACA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAG,CAAC;AACX;AACA;AACAC,IAAAA,EAAE,EAAG,CAHM;AAKXC,IAAAA,IAAI,EAAG;AACLD,MAAAA,EAAE,EAAG,CADA;AAELE,MAAAA,QAAQ,EAAG;AAFN,KALI;AASXC,IAAAA,OAAO,EAAG,sBATC;AAWXC,IAAAA,MAAM,EAAG,CAAC;AACRC,MAAAA,GAAG,EAAG;AADE,KAAD,EAEP;AACAA,MAAAA,GAAG,EAAG;AADN,KAFO,EAIP;AACAA,MAAAA,GAAG,EAAG;AADN,KAJO,CAXE;AAmBXC,IAAAA,OAAO,EAAG,CAAC;AACTL,MAAAA,IAAI,EAAG;AACLC,QAAAA,QAAQ,EAAG;AADN,OADE;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAD,EAKR;AACAF,MAAAA,IAAI,EAAG;AACLC,QAAAA,QAAQ,EAAG;AADN,OADP;AAIAC,MAAAA,OAAO,EAAE;AAJT,KALQ,EAUR;AACAF,MAAAA,IAAI,EAAG;AACLC,QAAAA,QAAQ,EAAG;AADN,OADP;AAIAC,MAAAA,OAAO,EAAE;AAJT,KAVQ;AAnBC,GAAD,CADc;AAqC1BI,EAAAA,UAAU,EAAG,EArCa;AAqCT;AACjBC,EAAAA,SAAS,EAAG,KAtCc,CAsCP;;AAtCO,CAArB,C,CAyCP;;AACA,IAAMC,QAAQ,GAAG,UAAjB,C,CAA6B;;AAC7B,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAGF;AADc,CAAhB;AAGP,IAAMG,SAAS,GAAG;AAChBZ,EAAAA,EAAE,EAAG,CADW;AAEhBG,EAAAA,OAAO,EAAE,WAFO;AAGhBF,EAAAA,IAAI,EAAG;AACLD,IAAAA,EAAE,EAAC,CADE;AAELE,IAAAA,QAAQ,EAAG;AAFN,GAHS;AAOhBW,EAAAA,KAAK,EAAG,EAPQ;AAQhBP,EAAAA,OAAO,EAAG;AARM,CAAlB;;AAWA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBjB,YAAyB;AAAA,MAAXkB,MAAW;;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKF,QAAL;AACA,6CACKM,KADL;AAEEhB,QAAAA,SAAS,GAAIa,SAAJ,4BAAkBG,KAAK,CAAChB,SAAxB,EAFX,CAGE;AACA;;AAJF;;AAMA;AACA,aAAOgB,KAAP;AATF;AAWD,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["//useState 로 썼던 더미데이터를 initialState 에 넣고 대문자로 된 부분은 실제 데이터를 받아서 넣으면 된다.\nexport const initialState = {\n  mainPosts : [{\n    //서버에서의 시퀄라이즈 등 다른정보들과 합칠만한 정보는 대문자로 시작하는게 좋다.\n    //서버쪽에서 데이터 어떻게 보낼지 물어봐 제발좀. 아니면 따로 요청하쇼.\n    id : 1,\n\n    User : {\n      id : 1,\n      nickname : 'sook'\n    },\n    content : '첫번째 게시글 #해시태그 #익스프레스',\n\n    Images : [{\n      src : 'https://blogfiles.pstatic.net/MjAyMDA5MDhfMjY3/MDAxNTk5NTM2OTM1ODMz._bpzejYT7BDuNJzz14Kja1sDuxuKbZ8faxtKvcqy0pAg.NtqaAdWrVzRB_adPPD2YBnqIevdDLRp86Ud3-670SMIg.JPEG.tbdtbd123/%EC%97%90%EB%A9%94%EB%9E%84%EB%93%9C%ED%98%B8%EC%88%98_%EC%A7%80%EB%A6%BC.jpg'\n    },{\n      src : 'https://postfiles.pstatic.net/MjAyMDA4MzBfMjg1/MDAxNTk4NzY5MzMzNDIz.AQF9ykn6dJJ4cQklyBY2W7dMqn48ItinAcBX2Bir-gsg.x3Qwoya92AWdF9LYpXLgfyunPiQWv2BgoWikraSTQ8wg.JPEG.tbdtbd123/%ED%9D%94%ED%95%9C%EC%98%A8%EC%B2%9C%EB%B7%B0.jpg?type=w966'\n    },{\n      src : 'https://postfiles.pstatic.net/MjAyMDA4MzBfNyAg/MDAxNTk4NzcwMzkwNTQ0.5FZy2dX2Aa7NCHuR7dUuecS2vHZXRSGTsN5PzS2-Uywg.fgW23kHGy87dKvUl7l7kzXIv6cnptrREwFg8a8jbIYcg.JPEG.tbdtbd123/%EC%84%A4%ED%8D%BC%EC%82%B0_%EB%92%B7%EB%AA%A8%EC%8A%B5.jpg?type=w966'\n    }],\n\n    Comment : [{\n      User : {\n        nickname : 'sook'\n      },\n      content: '돈 많이벌고싶다.',\n    },{\n      User : {\n        nickname : 'hyeyoung'\n      },\n      content: '여행가고싶다.',\n    },{\n      User : {\n        nickname : 'kitae'\n      },\n      content: '나도 돈 많이벌고싶다.',\n    }]\n  }],\n  imagePaths : [], //image 업로드 경로들이 저장될것.\n  postAdded : false, //게시글 추가가 완료되었을때.\n}\n\n//action 객체\nconst ADD_POST = 'ADD_POST'; //변수,상수로 따로빼준건 그냥 오타방지.\nexport const addPost = {\n  type : ADD_POST,\n}\nconst dummyPost = {\n  id : 2,\n  content: '더미데이터입니다.',\n  User : {\n    id:1,\n    nickname : 'babo',\n  },\n  Image : [],\n  Comment : [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type){\n    case ADD_POST: \n    return {\n      ...state,\n      mainPosts : [dummyPost, ...state.mainPosts],\n      //dummyPost 를 앞에 추가해준 이유는 게시글이 앞에서부터 쌓이기때문.\n      //반대가 되면 게시글 제일아래에 추가가 되버린다. \n    }\n    default : \n    return state\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}