{"ast":null,"code":"var _jsxFileName = \"/Users/2sook2/Desktop/\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB \\u1100\\u1161\\u11BC\\u110B\\u1174/\\uD83E\\uDD9Creact-nodeBird/front/components/PostForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const imageInput = useRef(); // DOM 에 접근하기 위한 useRef()\n\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  });\n  const onSubmit = useCallback(() => {\n    //onChangeText 에 남긴글을 포스팅해야하므로 ADD_POST 실행시킨다.\n    //디스패치를 해줘야함\n    dispatch(addPost); //액션은 객체임을 잊지마. \n  }, []); //이미지업로드 클릭\n\n  const onClickImgUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]); //imageInput.current 을 통해 imageInput에 접근할 수 있다.\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImgUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/2sook2/Desktop/인프런 강의/🦜react-nodeBird/front/components/PostForm.js"],"names":["Form","Input","Button","React","useCallback","useState","useRef","useDispatch","useSelector","addPost","PostForm","imageInput","imagePaths","state","post","dispatch","text","setText","onChangeText","e","target","value","onSubmit","onClickImgUpload","current","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import {Form, Input ,Button} from 'antd'\nimport React, { useCallback, useState,useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {addPost} from '../reducers/post'\n\nconst PostForm = () => {\n\n  const imageInput = useRef(); \n  // DOM 에 접근하기 위한 useRef()\n  const {imagePaths} = useSelector((state)=>state.post);\n  const dispatch = useDispatch();\n  const [text, setText] = useState('')\n  const onChangeText = useCallback((e) => {\n    setText(e.target.value)\n  })\n  const onSubmit = useCallback(()=>{\n    //onChangeText 에 남긴글을 포스팅해야하므로 ADD_POST 실행시킨다.\n    //디스패치를 해줘야함\n    dispatch(addPost); //액션은 객체임을 잊지마. \n  },[])\n\n  //이미지업로드 클릭\n  const onClickImgUpload = useCallback(()=>{\n    imageInput.current.click();\n  }, [imageInput.current])\n  //imageInput.current 을 통해 imageInput에 접근할 수 있다.\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish = {onSubmit}>\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\n      \n      <div>\n        <input type = 'file' multiple hidden ref ={imageInput} />\n        <Button onClick = {onClickImgUpload}>이미지 업로드</Button>\n        <Button type = 'primary' \n        style = {{float : 'right'}} htmlType = 'submit'>짹짹</Button>\n      </div>\n\n      <div>\n        {imagePaths.map((v)=>{\n          return <div key = {v} style = {{display : 'inline-block'}}>\n            <img src = {v} style = {{width : '200px'}} alt = {v} />\n            <div><Button>제거</Button></div>\n            </div>\n        })}\n      </div>\n\n    </Form>\n  )\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}