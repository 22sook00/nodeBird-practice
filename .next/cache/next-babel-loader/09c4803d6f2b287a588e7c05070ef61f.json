{"ast":null,"code":"var _jsxFileName = \"/Users/2sook2/Desktop/\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB \\u1100\\u1161\\u11BC\\u110B\\u1174/\\uD83E\\uDD9Creact-nodeBird/front/components/PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from '../components/PostImages';\nimport { Button, Card, Avatar, Popover } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false); //optional 체이닝 : ~~?.~~ 아이디가 있으면 me 가들어가고 없으면 언디파인이 들어간다.\n\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onToggleLike = useCallback(() => {\n    //false true 서로 바꾸는방법으로 이것도있음.\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    //false true 서로 바꾸는방법으로 이것도있음.\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 40\n      }, this) //jsx에서 배열안에는 key를 넣어주어야 한다. ex)map \n      ,\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, 'retweet', false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#32211\",\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, 'comment', false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, 'more', false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/2sook2/Desktop/인프런 강의/🦜react-nodeBird/front/components/PostCard.js"],"names":["React","useState","useCallback","useSelector","PropTypes","PostImages","Button","Card","Avatar","Popover","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","any"],"mappings":"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","sourcesContent":["\nimport React, {useState,useCallback} from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types';\n\nimport PostImages from '../components/PostImages'\n\nimport { Button ,Card, Avatar, Popover } from 'antd'\nimport { RetweetOutlined , HeartTwoTone , HeartOutlined , MessageOutlined , EllipsisOutlined} from '@ant-design/icons'\n\nconst PostCard = ({post}) => {\n  \n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened , setCommentFormOpened] = useState(false)\n  //optional 체이닝 : ~~?.~~ 아이디가 있으면 me 가들어가고 없으면 언디파인이 들어간다.\n  const id = useSelector((state)=>state.user.me ?.id);\n\n  const onToggleLike = useCallback(()=>{\n    //false true 서로 바꾸는방법으로 이것도있음.\n    setLiked((prev)=>!prev);\n  },[])\n  const onToggleComment = useCallback(()=>{\n    //false true 서로 바꾸는방법으로 이것도있음.\n    setCommentFormOpened((prev)=>!prev);\n  },[])\n  \n  return (\n    <div style = {{marginBottom : 20}}>\n      <Card cover = {post.Images[0] && <PostImages images = {post.Images}/>}\n      //jsx에서 배열안에는 key를 넣어주어야 한다. ex)map \n      actions = {[\n        <RetweetOutlined key = 'retweet'/>,\n        liked ? \n          <HeartTwoTone twoToneColor = '#32211' key = 'heart' onClick = {onToggleLike}/> \n          :\n          <HeartOutlined key = 'heart' onClick = {onToggleLike} />,\n        <MessageOutlined key = 'comment'onClick = {onToggleComment}/>,\n        <Popover key = 'more' content = {(\n          <Button.Group>\n            {/*로그인했고, 내 아이디가 아이디와 같으면 수정삭제가능, 아니면 신고가능 */}\n            {id && post.User.id === id ? (\n              <>\n              <Button>수정</Button>\n              <Button type = 'danger'>삭제</Button>\n              </>\n            ) : <Button>신고</Button>}\n          </Button.Group>\n        )}>\n          <EllipsisOutlined />\n        </Popover>\n      ]}\n      >\n        <Card.Meta\n        avatar = {<Avatar>{post.User.nickname[0]}</Avatar>}\n        title = {post.User.nickname}\n        description = {post.content}\n        />\n      </Card>\n      {commentFormOpened && (\n        <div>\n          댓글부분\n        </div>\n      )}\n      {/*<CommentForm/>\n      <Comments/>*/}\n    </div>\n  )\n}\n\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n  }),\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}