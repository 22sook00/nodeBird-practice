{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/2sook2/Desktop/\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1165\\u11AB \\u1100\\u1161\\u11BC\\u110B\\u1174/\\uD83E\\uDD9Creact-nodeBird/front/components/LoginForm.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar BtnWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n\"])));\n_c = BtnWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  padding : 10px;\\n\"]))); //props 로 넘겨주는 애는 되도록이면 useCallback 을 써준다. 그래야 최적화가 된다.즉, 함수를 캐싱하는 것.\n\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; //onfinish 는 이미 e.preventDefault 가 적용되어 있다. 그래서 antd에서는 쓰면 e.preventDefault 안된다.\n\n\n  var onSubmitForm = useCallback(function () {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormWrapper, {\n      onFinish: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-id\",\n          value: id,\n          type: \"text\",\n          onChange: onChangeId,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"user-password\",\n          value: password,\n          type: \"password\",\n          onChange: onChangePassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(BtnWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: false,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 35\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 32\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"uJXKu7MNnxnO3hK6g9uuvePY7eY=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c3 = LoginForm;\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BtnWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["/Users/2sook2/Desktop/인프런 강의/🦜react-nodeBird/front/components/LoginForm.js"],"names":["React","useState","useCallback","Form","Input","Button","Link","styled","PropTypes","useInput","BtnWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","onChangeId","password","onChangePassword","onSubmitForm","console","log","propTypes","func","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,SAAQC,IAAR,EAAeC,KAAf,EAAsBC,MAAtB,QAAmC,MAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,IAAMC,UAAU,GAAGH,MAAM,CAACI,GAAV,4FAAhB;KAAMD,U;AAGN,IAAME,WAAW,GAAGL,MAAM,CAACJ,IAAD,CAAT,4FAAjB,C,CAGA;;MAHMS,W;;AAKN,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqB;AAAA;;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;;AAErC,kBAAwBL,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOM,EAAP;AAAA,MAAUC,UAAV;;AACA,mBAAqCP,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,gBAAjB,iBAHqC,CAKrC;;;AACA,MAAMC,YAAY,GAAGjB,WAAW,CAAC,YAAI;AACnCkB,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ,EAAeE,QAAf;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAH+B,EAG9B,CAACC,EAAD,EAAIE,QAAJ,CAH8B,CAAhC;AAKA,sBAAO;AAAA,2BACH,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAIE,YAAzB;AAAA,8BACA;AAAA,gCACE;AAAO,UAAA,OAAO,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,KAAD;AACA,UAAA,IAAI,EAAG,SADP;AAEA,UAAA,KAAK,EAAIJ,EAFT;AAGA,UAAA,IAAI,EAAG,MAHP;AAIA,UAAA,QAAQ,EAAIC,UAJZ;AAIwB,UAAA,QAAQ;AAJhC;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAWA;AAAA,gCACE;AAAO,UAAA,OAAO,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE,QAAC,KAAD;AACA,UAAA,IAAI,EAAG,eADP;AAEA,UAAA,KAAK,EAAIC,QAFT;AAGA,UAAA,IAAI,EAAG,UAHP;AAIA,UAAA,QAAQ,EAAIC,gBAJZ;AAI8B,UAAA,QAAQ;AAJtC;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eAXA,eAqBA,QAAC,UAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAG,SAAf;AAAyB,UAAA,QAAQ,EAAG,QAApC;AAA6C,UAAA,OAAO,EAAI,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,SAAb;AAAA,iCAAuB;AAAA,mCAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AA4BD,CAvCD;;GAAML,S;UAEoBJ,Q,EACaA,Q;;;MAHjCI,S;AAwCNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,aAAa,EAAGN,SAAS,CAACe,IAAV,CAAeC;AADX,CAAtB;AAIA,eAAeX,SAAf","sourcesContent":["import React, { useState,useCallback } from 'react'\nimport {Form , Input, Button} from 'antd'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport useInput from '../hooks/useInput'\n\nconst BtnWrapper = styled.div`\n  margin-top: 10px;\n`\nconst FormWrapper = styled(Form)`\n  padding : 10px;\n`\n//props 로 넘겨주는 애는 되도록이면 useCallback 을 써준다. 그래야 최적화가 된다.즉, 함수를 캐싱하는 것.\n\nconst LoginForm = ({setIsLoggedIn}) => {\n\n  const [id,onChangeId] = useInput('')\n  const [password, onChangePassword] = useInput('')\n\n  //onfinish 는 이미 e.preventDefault 가 적용되어 있다. 그래서 antd에서는 쓰면 e.preventDefault 안된다.\n  const onSubmitForm = useCallback(()=>{\n    console.log(id,password)\n    setIsLoggedIn(true)\n  },[id,password])\n\n  return <>\n      <FormWrapper onFinish = {onSubmitForm}>\n      <div>\n        <label htmlFor = 'user-id'>아이디</label>\n        <br/>\n        <Input \n        name = 'user-id' \n        value = {id} \n        type = 'text' \n        onChange = {onChangeId} required></Input>\n      </div>\n\n      <div>\n        <label htmlFor = 'user-id'>비밀번호</label>\n        <br/>\n        <Input \n        name = 'user-password' \n        value = {password} \n        type = 'password'\n        onChange = {onChangePassword} required></Input>\n      </div>\n\n      <BtnWrapper>\n        <Button type = 'primary' htmlType = 'submit' loading = {false} >로그인</Button>\n        <Link href = '/signup'><a><Button>회원가입</Button></a></Link>\n      </BtnWrapper>\n    </FormWrapper>\n    </>\n}\nLoginForm.propTypes = {\n  setIsLoggedIn : PropTypes.func.isRequired,\n};\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}